/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package musicbox;

import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;

/**
 * AddToSongLibrary --- frame to save new song to song library
 *
 * @author Ashwika Katiyar
 */
public class AddToSongLibrary extends javax.swing.JFrame {

    private String type;
    private DefaultListModel songLib;
    private PlayListManager allPL;
    private String plName;

    /**
     * Creates new form AddToSongLibrary Initializes type, songLib, allPL, and
     * plName Sets background based on Food Truck type
     *
     * @param truckChoice A String containing the type of Food Truck chosen
     * @param pl A string containing the name of the playlist being edited
     * @param manage A PlayListManager containing all of the playlists created
     */
    public AddToSongLibrary(String truckChoice, String pl, PlayListManager manage) {
        initComponents();
        songLib = new DefaultListModel();
        allPL = manage;
        plName = pl;
        type = truckChoice;
        ImageIcon bg = null;
        switch (type) {
            case "Burgers and Sliders":
                bg = new ImageIcon("BurgerAdd.png");
                break;
            case "Desserts":
                bg = new ImageIcon("DessertAdd.png");
                break;
            case "Pizza":
                bg = new ImageIcon("PizzaAdd.png");
                break;
            case "Breakfast and Brunch":
                bg = new ImageIcon("BreakfastAdd.png");
                break;
            case "Crepes":
                bg = new ImageIcon("CrepeAdd.png");
                break;
            case "Tacos and Burritos":
                bg = new ImageIcon("TacoAdd.png");
                break;
        }
        jLabel1.setIcon(bg);
        this.setSize(bg.getIconWidth(), bg.getIconHeight());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        name = new javax.swing.JTextField();
        fileType = new javax.swing.JTextField();
        fileName = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(540, 540));
        setResizable(false);
        setSize(new java.awt.Dimension(540, 540));
        getContentPane().setLayout(null);
        getContentPane().add(name);
        name.setBounds(260, 170, 210, 23);
        getContentPane().add(fileType);
        fileType.setBounds(260, 310, 210, 23);
        getContentPane().add(fileName);
        fileName.setBounds(260, 240, 210, 23);

        add.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add);
        add.setBounds(210, 430, 130, 40);

        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 540, 540);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * addActionPerformed --- asks for song information and adds it to the song
     * library
     *
     * @param evt
     */
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        songLib.addElement(name.getText() + ":" + fileName.getText() + fileType.getText());
        try {
            SinglePlayListEdit back = new SinglePlayListEdit(type, allPL, plName, songLib);
            back.setVisible(true);
            this.dispose();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AddToSongLibrary.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField fileName;
    private javax.swing.JTextField fileType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField name;
    // End of variables declaration//GEN-END:variables
}
